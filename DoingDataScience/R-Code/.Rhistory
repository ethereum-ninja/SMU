cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
print(name[[1]])
print(name[[c(2, length(name))]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
print(name[[1]])
print(name[[2:length(name)]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
print(name[[1]])
print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
name = unlist(name)
print(name[[1]])
print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
name = unlist(name)
print(name)
print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
#print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
name_array(row)
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
return(name[[1]])
#print(name[[2:length(name)-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
print(name_array(row))
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
#return(name[[1]])
print(name[[1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
print(name_array(row))
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
#return(name[[1]])
print(name[[1]])
print(name[[-1]])
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
print(name_array(row))
})
name_array <- function(row){
name = unlist(strsplit(row['Actor'][1, 1], ' '))
#return(name[[1]])
print(name[[1]])
print(c(name[[-1]]))
}
library(rvest)
library(xml2)
harry_potter_page <- read_html('http://www.imdb.com/title/tt1201607/fullcredits')
cast_data_html <- html_nodes(harry_potter_page, 'table.cast_list')
#cast = html_nodes(cast_data_html, 'a[href]')
#cast_data <- html_text(cast_data_html)
#cast_data <- gsub('\\n', ' ', cast_data)
#head(cast_data)
t = html_table(cast_data_html)[[1]]
#for (x in cast){
#     print(html_text(x, trim=TRUE))
#}
names(t) <- c("Drop1", "Actor", "Drop2", "Character")
cast <- subset(t, select = c("Actor", "Character"))
cast =  cast[!(cast$Actor=="Rest of cast listed alphabetically:" | cast$Actor==""), ]
by(cast, 1:nrow(cast), function(row) {
# print(name_array(row))
})
#.Table2__table__wrapper :nth-child(1)
library(rvest)
library(ggplot2)
install.packages("ggplot2")
#.Table2__table__wrapper :nth-child(1)
library(rvest)
library(ggplot2)
parse_row <- function(row){
name = strsplit(row['Player'][1, 1], ' ')
name_vec =  c(name[[1]])
name =  stri_join_list(list(name_vec[1:length(name_vec)-1]), sep=" ")
position = name_vec[length(name_vec)]
return(c(PlayerName=name, Position=position))
}
spurs_page <- read_html('https://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs')
spurs_data_html <- html_nodes(spurs_page, '.Table2__table__wrapper')
t = html_table(spurs_data_html, dec = '.', fill=TRUE)[[2]]
t = t[3:nrow(t),1:14]
players = t[1:13,1]
player_stats = t[16:29,]
names(player_stats) = player_stats[1,]
player_stats = as.data.frame(sapply(player_stats[2:nrow(player_stats),], as.numeric))
player_stats['Player'] = players
z = by(player_stats, 1:nrow(player_stats), function(x) {
parse_row(x)
})
#.Table2__table__wrapper :nth-child(1)
library(rvest)
library(ggplot2)
library(stringi)
parse_row <- function(row){
name = strsplit(row['Player'][1, 1], ' ')
name_vec =  c(name[[1]])
name =  stri_join_list(list(name_vec[1:length(name_vec)-1]), sep=" ")
position = name_vec[length(name_vec)]
return(c(PlayerName=name, Position=position))
}
spurs_page <- read_html('https://www.espn.com/nba/team/stats/_/name/sa/san-antonio-spurs')
spurs_data_html <- html_nodes(spurs_page, '.Table2__table__wrapper')
t = html_table(spurs_data_html, dec = '.', fill=TRUE)[[2]]
t = t[3:nrow(t),1:14]
players = t[1:13,1]
player_stats = t[16:29,]
names(player_stats) = player_stats[1,]
player_stats = as.data.frame(sapply(player_stats[2:nrow(player_stats),], as.numeric))
player_stats['Player'] = players
z = by(player_stats, 1:nrow(player_stats), function(x) {
parse_row(x)
})
player_names_and_positions = as.data.frame(matrix(unlist(z), nrow=length(z), ncol=2, byrow=T), stringsAsFactors = FALSE)
player_stats['Player'] = player_names_and_positions['V1']
player_stats['Position'] = player_names_and_positions['V2']
for(x in player_stats){
print(typeof(x))
}
spurs_plot = ggplot(player_stats, aes(x=player_stats$Player, y=player_stats$`FG%`, fill=player_stats$Position)) + geom_bar(stat = "identity") + coord_flip() + labs(x = 'Player', y='FG%', fill='Position')
print(spurs_plot + ggtitle('FG% By Player') +
theme(plot.title = element_text(hjust = 0.5)))
autism_data = read.csv('~/Documents/SMU/Stats/Homework/HW4/Autism.csv')
#wilcox.test()
View(autism_data)
autism_data = read.csv('~/Documents/SMU/Stats/Homework/HW4/Autism.csv')
wilcox.test(Before ~ After, paired=TRUE, alternative="greater")
autism_data = read.csv('~/Documents/SMU/Stats/Homework/HW4/Autism.csv')
wilcox.test(Before ~ After, paired=TRUE, data = autism_data)
autism_data = read.csv('~/Documents/SMU/Stats/Homework/HW4/Autism.csv')
wilcox.test(x=autism_data$Before, y=autism_data$After, paired=TRUE)
names_2016 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE)
names_2016 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
```{r echo=TRUE}
names_2016 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
describe(df)
df.describe()
summary(df)
View(names_2016)
df = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
summary(df)
df = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
yyy_name = df[substr(df$Name, size(df$Name)-3, size[df$Name]) == 'yyy']
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-3, stri_length[df$Name]) == 'yyy']
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-3, stri_length[df$Name]) == 'yyy']
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-3, stri_length(df$Name) == 'yyy']
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-3, stri_length(df$Name)) == 'yyy']
View(yyy_name)
library(stringi)
yyy_name = df[[substr(df$Name, stri_length(df$Name)-3, stri_length(df$Name)) == 'yyy']]
library(stringi)
yyy_name = substr(df$Name, stri_length(df$Name)-3, stri_length(df$Name))
library(stringi)
yyy_name = substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name))
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy']
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
View(yyy_name)
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
yyy_name
y2016 = df[~substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
y2016 = df[~substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
y2016 = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) != 'yyy',]
df = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
yyy_name
y2016 = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) != 'yyy',]
y2016
y2015 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2015.txt', sep=',', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
View(y2015)
tail(y2015, 10)
tail(y2015, 10)
final = merge(y2016, y2015, by="Name", all=TRUE)
View(final)
final = merge(y2016, y2015, by="Name", all.x=TRUE)
View(final)
df = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
yyy_name
y2016 = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) != 'yyy',]
y2016
y2015 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2015.txt', sep=',', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
tail(y2015, 10)
final = merge(y2016, y2015, by="Name", all.x=TRUE)
View(final)
final = merge(x=y2016, y=y2015, by="Name", all.x=TRUE)
View(final)
final = merge(x=y2016, y=y2015, by="Name", all=TRUE)
View(final)
final = merge(x=y2016, y=y2015, by="Name")
View(final)
final = merge(x=y2016, y=y2015, by=("Name", "Gender"))
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"))
View(final)
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"))
final = rename(final, c('Frequency.x'='2015'))
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"), suffixes = c('2016', '2015'))
\
View(final)
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"), suffixes = c('2016', '2015'))
final['Total'] = final$Frequency2016 + final$Frequency2015
View(final)
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"), suffixes = c('2016', '2015'))
final['Total'] = final$Frequency2016 + final$Frequency2015
sum(final$Total)
sorted_by_total = final[order(-Total),]
sorted_by_total = final[order(-final$Total),]
View(sorted_by_total)
sorted_by_total = final[order(-final$Total),]
head(sorted_by_total, 10)
head(sorted_by_total[sorted_by_total$Gender == 'F', ], 10)
top_10_female_names = sorted_by_total[sorted_by_total$Gender == 'F', 'Name']
female_names = sorted_by_total[sorted_by_total$Gender == 'F', 'Name']
top_10_female_names = female_names[1:10,]
female_names = sorted_by_total[sorted_by_total$Gender == 'F', 'Name']
top_10_female_names = female_names[1:10]
df = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2016.txt', sep=';', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
summary(df)
library(stringi)
yyy_name = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) == 'yyy',]
yyy_name
y2016 = df[substr(df$Name, stri_length(df$Name)-2, stri_length(df$Name)) != 'yyy',]
y2016
y2015 = read.csv('~/Documents/SMU/DoingDataScience/Homework/hw5/yob2015.txt', sep=',', fill=TRUE, col.names = c('Name', 'Gender', 'Frequency'))
tail(y2015, 10)
final = merge(x=y2016, y=y2015, by=c("Name", "Gender"), suffixes = c('2016', '2015'))
final['Total'] = final$Frequency2016 + final$Frequency2015
sum(final$Total)
sorted_by_total = final[order(-final$Total),]
head(sorted_by_total, 10)
head(sorted_by_total[sorted_by_total$Gender == 'F', ], 10)
female_names = sorted_by_total[sorted_by_total$Gender == 'F', 'Name']
top_10_female_names = data.frame(female_names[1:10])
View(top_10_female_names)
female_names = sorted_by_total[sorted_by_total$Gender == 'F', 'Name']
top_10_female_names = data.frame(female_names[1:10])
write.csv(top_10_female_names, 'top_10_female_names')
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10])
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10, ])
write.csv(top_10_female_names, 'top_10_female_names')
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10, ])
write.csv(top_10_female_names['Name', 'Total'], 'top_10_female_names')
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10, ])
write.csv(top_10_female_names[c('Name', 'Total')], 'top_10_female_names')
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10, ])
rownames(top_10_female_names) <- c()
write.csv(top_10_female_names[c('Name', 'Total')], 'top_10_female_names')
View(female_names)
female_names = sorted_by_total[sorted_by_total$Gender == 'F', c('Name', 'Total')]
top_10_female_names = data.frame(female_names[1:10, ])
rownames(top_10_female_names) <- c()
write.csv(top_10_female_names[c('Name', 'Total')], 'top_10_female_names', row.names = FALSE)
titanic_data <- read.table(file = "~/Documents/SMU/DoingDataScience/Homework/HW3/GIT/awesome-public-datasets/Datasets/titanic.csv",header = T,sep = ","); #
summary(titanic_data)
#females <- titanic_data[which(titanic_data$Survived ==1)]
females <- titanic_data[which(titanic_data$Sex =='female'), ]
hist(females$Age, xlab = 'Age', ylab= 'Count', main = 'Female Passenger Age')
hist(females$Survived, xlab = 'Survived', ylab= 'Count', main = 'Female Passenger Survival')
males <- titanic_data[which(titanic_data$Sex =='male'), ]
hist(males$Age, xlab = 'Age', ylab= 'Count', main = 'Male Passenger Age')
hist(males$Survived, xlab = 'Survived', ylab= 'Count', main = 'Male Passenger Survival')
means = apply(data.matrix(titanic_data[,c('Age', 'Fare', 'Survived')]), MARGIN = 2, FUN=mean, na.rm=TRUE)
real = means == Re(means)
sleep_data <- read.table(file = "~/Documents/SMU/DoingDataScience/Homework/HW3/sleep_data_01.csv",header = T,sep = ",");
summary(sleep_data)
median_age = apply(data.matrix(sleep_data[,c('Age')]), MARGIN = 2, FUN=median, na.rm=TRUE)
min_sleep = apply(data.matrix(sleep_data[,c('Duration')]), MARGIN = 2, FUN=min, na.rm=TRUE)
max_sleep = apply(data.matrix(sleep_data[,c('Duration')]), MARGIN = 2, FUN=max, na.rm=TRUE)
RSES = c(apply(data.matrix(sleep_data[,c('RSES')]), MARGIN = 2, FUN=mean, na.rm=TRUE), apply(data.matrix(sleep_data[,c('RSES')]), MARGIN = 2, FUN=sd, na.rm=TRUE))
summary = t(summarize(sleep_data))
titanic_data <- read.table(file = "~/Documents/SMU/DoingDataScience/Homework/HW3/GIT/awesome-public-datasets/Datasets/titanic.csv",header = T,sep = ","); #
summary(titanic_data)
#females <- titanic_data[which(titanic_data$Survived ==1)]
females <- titanic_data[which(titanic_data$Sex =='female'), ]
hist(females$Age, xlab = 'Age', ylab= 'Count', main = 'Female Passenger Age')
hist(females$Survived, xlab = 'Survived', ylab= 'Count', main = 'Female Passenger Survival')
males <- titanic_data[which(titanic_data$Sex =='male'), ]
hist(males$Age, xlab = 'Age', ylab= 'Count', main = 'Male Passenger Age')
hist(males$Survived, xlab = 'Survived', ylab= 'Count', main = 'Male Passenger Survival')
means = apply(data.matrix(titanic_data[,c('Age', 'Fare', 'Survived')]), MARGIN = 2, FUN=mean, na.rm=TRUE)
real = means == Re(means)
sleep_data <- read.table(file = "~/Documents/SMU/DoingDataScience/Homework/HW3/sleep_data_01.csv",header = T,sep = ",");
summary(sleep_data)
median_age = apply(data.matrix(sleep_data[,c('Age')]), MARGIN = 2, FUN=median, na.rm=TRUE)
min_sleep = apply(data.matrix(sleep_data[,c('Duration')]), MARGIN = 2, FUN=min, na.rm=TRUE)
max_sleep = apply(data.matrix(sleep_data[,c('Duration')]), MARGIN = 2, FUN=max, na.rm=TRUE)
RSES = c(apply(data.matrix(sleep_data[,c('RSES')]), MARGIN = 2, FUN=mean, na.rm=TRUE), apply(data.matrix(sleep_data[,c('RSES')]), MARGIN = 2, FUN=sd, na.rm=TRUE))
summary = t(summarize(sleep_data))
